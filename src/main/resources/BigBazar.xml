<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:oxm="http://www.springframework.org/schema/oxm"
	xmlns:util="http://www.springframework.org/schema/util" xmlns:mvc="http://www.springframework.org/schema/mvc"
	xmlns:context="http://www.springframework.org/schema/context" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:sws="http://www.springframework.org/schema/web-services"
	xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans-4.2.xsd
							http://www.springframework.org/schema/mvc http://www.springframework.org/schema/mvc/spring-mvc-4.2.xsd
							http://www.springframework.org/schema/context http://www.springframework.org/schema/context/spring-context-4.2.xsd
							http://www.springframework.org/schema/oxm
							http://www.springframework.org/schema/oxm/spring-oxm-4.2.xsd
							http://www.springframework.org/schema/web-services 
							http://www.springframework.org/schema/web-services/web-services-2.0.xsd
							http://www.springframework.org/schema/tx
	   						http://www.springframework.org/schema/tx/spring-tx-4.2.xsd
							http://www.springframework.org/schema/util
  							http://www.springframework.org/schema/util/spring-util-4.2.xsd
  							http://www.springframework.org/schema/aop
	   						http://www.springframework.org/schema/aop/spring-aop-4.2.xsd">


	<mvc:annotation-driven />
	<context:component-scan base-package="com.bigbazar" />
	<context:annotation-config />

	<!-- PROPERTY CONFUGURER -->
	<bean id="propertyConfigurer" class="com.bigbazar.util.PropertyConfigurer">
		<property name="locations">
			<list>
				<value>classpath:messages.properties</value>
				<value>classpath:MS-messages.properties</value>
				<value>classpath:configuration.properties</value>
				<value>classpath:sqlQueries.properties</value>
			</list>
		</property>
	</bean>

	<!-- enable the configuration of transactional behavior based on annotations -->
	<tx:annotation-driven transaction-manager="telenorTransactionManager" />

	<!-- Transaction Manager -->

	<bean id="telenorTransactionManager" class="org.springframework.orm.hibernate4.HibernateTransactionManager">
		<property name="sessionFactory" ref="sessionFactory" />
	</bean>
	<bean id="sessionFactory"
		class="org.springframework.orm.hibernate4.LocalSessionFactoryBean">
		<property name="dataSource" ref="dataSourceBean" />
		<property name="configLocation" value="classpath:hibernate.cfg.xml" />
	</bean>
	<!-- Declare a JPA entityManagerFactory -->
	<!-- <bean id="entityManagerFactory"
		class="org.springframework.orm.jpa.LocalContainerEntityManagerFactoryBean">
		<property name="persistenceXmlLocation" value="classpath:persistence.xml"></property>
		<property name="persistenceUnitName" value="hibernatePersistenceUnit" />
		<property name="dataSource" ref="dataSourceBean" />
		<property name="jpaVendorAdapter">
			<bean class="org.springframework.orm.jpa.vendor.HibernateJpaVendorAdapter">
				<property name="showSql" value="true" />
			</bean>
		</property>
	</bean> -->

	 <bean id="dataSourceBean" class="org.springframework.jdbc.datasource.DriverManagerDataSource"> 
		<property name="driverClassName" value="${driverClassName}" /> <property 
		name="url" value="${databaseUrlEgis}" /> <property name="username" value="${liDatabaseUserName}" 
		/> <property name="password" value="${liDatabasePassword}" /> </bean> 
	
	<bean
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping" />
		
	 		
	  <!-- REST -->
    <bean class="org.springframework.web.servlet.view.ContentNegotiatingViewResolver">
        <property name="order" value="1" />
        <property name="contentNegotiationManager">
            <bean class="org.springframework.web.accept.ContentNegotiationManager">
                <constructor-arg>
                    <bean class="org.springframework.web.accept.PathExtensionContentNegotiationStrategy">
                        <constructor-arg>
                            <map>
                                <entry key="json" value="application/json"/>
                                <entry key="xml" value="application/xml"/>
                            </map>
                        </constructor-arg>
                    </bean>
                </constructor-arg>
            </bean>
        </property>


        <property name="defaultViews">
            <list>
                <!-- JSON View -->
                <bean class="org.springframework.web.servlet.view.json.MappingJackson2JsonView" />

                <!-- XML View -->
                <bean class="org.springframework.web.servlet.view.xml.MarshallingView">
                    <constructor-arg>
                        <bean class="org.springframework.oxm.jaxb.Jaxb2Marshaller">
                            <property name="packagesToScan">
                                <list>
                                    <value>com.bigbazar</value>
                                </list>
                            </property>
                        </bean>
                    </constructor-arg>
                </bean>
            </list>
        </property>
    </bean>


	<bean id="jsonMessageConverter"
		class="org.springframework.http.converter.json.MappingJackson2HttpMessageConverter" />

	<bean
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="messageConverters">
			<util:list id="beanList">
				<ref bean="jsonMessageConverter" />
			</util:list>
		</property>
	</bean> 




	<bean id="bigBazarDao" class="com.bigbazar.dao.impl.BigBazarDaoImpl" scope="singleton" />


	<bean id="restTemplate" class="org.springframework.web.client.RestTemplate" />

	



</beans>
